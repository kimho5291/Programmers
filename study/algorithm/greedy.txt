

# 그리디 알고리즘 (탐욕법, Greedy Algorithm)

해당 주어진 환경에서 최적의 값을 구하는 방식

최적의 값을 구해야하는 상황에서 사용되는 근시안적인 방법론
각 단계에서 최적이라고 생각되는 것을 선택해 나가는 방식으로 진행하여 최종적인 답에 도달하는 알고리즘
이때 최적의 값은 정확한 값이 아닌 최적의 값에 근사한 값이 목표

## 아래의 두가지 조건이 성립해야 그리디 알고리즘을 적용할 수 있다.
1. 탐욕 선택 속성(Greedy Choice Property)
2. 최적 부분 구조(Optimal Substructure)

1. 탐욕 선택 속성
각 단계에서 최선의 선택을 했을 때 전체 문제에 대한 최적해를 구할 수 있는 경우
- 각 단계에서 가장 이상적인 선택을 하는 것이 전체적으로 최적의 결과를 가져온다는 것

2. 최적 부분 구조
전체 문제의 최적해가 부분문제의 최적해로 구성될 수 있는 경우
- 전체 문제를 작은 부분 문제로 나누어 각각의 부분 문제에서 최적의 해를 구한 후 
  이를 조합하여 전체 문제의 최적해를 구하는 것을 의미

## 알고리즘 단계
1. 문제의 최적해 구조를 결정
2. 문제의 구조에 맞게 선택절차 정의 -> 선택 절차
3. 선택 절차에 따라 선택을 수행
4. 선택된 해가 문제의 조건을 만족하는지 검사 -> 적절성 검사
5. 조건을 만족하지 않으면 해당 해 제외
6. 모든 선택이 완료되면 해답 감사 -> 해답 검사
7. 조건을 만족하지 않으면 해답으로 인정 X

- 선택 절차(Selection Procedure)
현재 상태에서 최적인 선택, 이후에는 바꾸지 않는다.

- 적절성 검사(Feasibility Check)
선택한 항목이 문제의 조건을 만족하는지 확인, 만족하지 않으면 해당 항목은 제외

- 해답 검사(Solution Check)
모든 선택이 완료되면 최종선택이 문제의 조건을 만족하는지 확인, 조건을 만족시키면 해답 인정