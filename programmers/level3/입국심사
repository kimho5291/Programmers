
/*
문제
입국심사를 하는데 입국자 모두 입국하는데 최솟시간을 구하시오

조건
매개변수 : n 입국자 수, times 각 입국심사관의 걸리는 시간
1. n : 1~1,000,000,000
2. time length : 1 ~ 100,000
- 1. times의 원소 : 1~1,000,000,000

풀이
각 원소의 길이가 10억 이기때문에 단순 비교는 어렵다 ..
이분 탐색이라고 하는데 이분탐색은 정렬이 되어있어야한다.
그런데 뭘 정렬을 해야할까 
[2단계 순위 검색] 처럼 전부 만들어야 하는건가 ... => 모든 경우의 수를 다루기엔 어려움이 존재

7 14 21 28 35 42
10 20 30 40 50 60

책을 보니깐 시간을 주면서 주워진 시간에 각 심사원이 몇명을 할 수 있는지 비교 
모두 더하면 해당 시간에 심사원이 할 수 있는 입국자 수를 알 수 있다.
그렇기 때문에 최소 1 ~ 최대 1,000,000,000,000,000,000 => 100 경을 10억 최대입국자 * 10억 최대 심사시간
만약 범위가 적다면 늘리는 식으로 하여튼 최대치를 정한다.

모든 입국자를 해결할 수 있는 최솟값 찾기 가능!

*/

// M = 심사관 인원, N= 최대 시간
// 풀이 => 통과 => 시간 복잡도 O(M logN)
function solution(n, times) {
    let start = 1, end = Math.pow(10, 18);
    while(end > start){
        let cur = parseInt((start+end)/2);
        if(check(cur, n, times)){
            end = cur;
        }else{
            start = cur+1;
        }
    }
    return end;
}

function check(cur, n, times){
    let sum = 0;
    for(let i=0; i<times.length; i++){
        sum += parseInt(cur / times[i]);
    }
    return sum >= n;
}