// 해결 0 DP

// DP 전부 구하면서 가는 방식이면 DP가 유력함

/*
문제
효진이는 멀리 뛰기를 1칸 or 2칸을 뛸 수 있다.
주어진 칸에서 효진이가 몇가지의 경우의 수로 뛸 수 있는지 구하시오

조건
매개변수 : n 총칸
1. n : 1~2000
2. return은 1234567을 나눈 나머지를 리턴 => return answer%1234567

풀이

1 1
2 2
3 3
4 5
5 8
6 13
n = n-1 + n-2 로 최초 풀이 =>  
현재 n칸째의 경우의 수를 구해본다고하면, 
  n-1칸에서 1칸 뛰어서 온경우, n-2칸에서 2칸 뛰어서 온 경우 이기 때문에
dp[n] = dp[n-1] + dp[n-2];

질문을 보니 설명이 똑같은 점화식을 사용하여서 풀더라

예외처리
1. n = 2 작을 수 있으니 예외 추가 추가

질문을 보니 
%1234267이 값이 크면 오차가 생길 수 있기 때문에 값을 삽입할때 마다 해줘야한다고 함

// 변경1
질문을 보고 힌트를 얻은 오차 변경

*/

// 최초풀이 => 31.3점 => 정확성 실패 
function solution(n) {
    let answer = [1, 2];
    for(let i=2; i<n; i++){
        ㅣ
        answer.push((answer[i-1] + answer[i-2]));
    }
    return answer[n-1];
}

// 변경 1 => 통과 => O(N)
function solution(n) {
    let answer = [1, 2];
    for(let i=2; i<n; i++){
        answer.push((answer[i-1] + answer[i-2])%1234567);
    }
    return answer[n-1];
}