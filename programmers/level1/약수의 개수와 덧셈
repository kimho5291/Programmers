
// 풀이
//divisor => 약수의 개수를 샌 후 짝수면 num(양수), 홀수면 -num(음수) 반환
//solution => 매개변수인 left부터 right까지 돌면서 divisor 호출 후 값을 더해주기

const divisor = (num) =>{
    let result = 0;
    for(let i=1; i<=num; i++){
        if(num%i == 0){
            result++;
        }
    }
    return result%2==0?num:-num;
}

function solution(left, right) {
    var answer = 0;
    for(let i=left; i<=right; i++){
        answer += divisor(i);
    }
    return answer;
}

//공부한 풀이
//어떤 수의 제곱근이 정수이면 약수는 홀수개이고, 제곱근이 아니면 약수는 짝수개 라는 개념을 사용하여 간단히 풀이가능하다.
//Math.sqrt => 제곱근 구해주는 함수
//Number.isInteger => 정수인지 확인하는 함수
//실행시간도 줄었다.

function solution(left, right) {
    var answer = 0;
    for(let i=left; i<=right; i++){
        if(Number.isInteger(Math.sqrt(i))){
            answer-=i;
        }else{
            answer+=i;
        }
    }
    return answer;
}
